// <auto-generated />
using System;
using InzBackInfrastructure.InzBackDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InzBackInfrastructure.Migrations
{
    [DbContext(typeof(InzBackContext))]
    partial class InzBackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InzBackCore.Domain.Matchh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatDate");

                    b.Property<DateTime?>("MatchDate");

                    b.Property<string>("OpponentTeam");

                    b.Property<string>("Place");

                    b.Property<int?>("ScoreFirstTeam");

                    b.Property<int?>("ScoreSecondTeam");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("InzBackCore.Domain.MatchhPlayer", b =>
                {
                    b.Property<int?>("MatchhId");

                    b.Property<int?>("PlayerId");

                    b.Property<int?>("Assists");

                    b.Property<int?>("Goals");

                    b.Property<int?>("Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("PlayInMatch");

                    b.Property<int?>("RedCard");

                    b.Property<int?>("YellowCard");

                    b.HasKey("MatchhId", "PlayerId");

                    b.HasAlternateKey("Id", "MatchhId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("MatchhPlayer");
                });

            modelBuilder.Entity("InzBackCore.Domain.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name");

                    b.Property<string>("Position");

                    b.Property<string>("Surname");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("InzBackCore.Domain.PlayersStatictics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Assists");

                    b.Property<int?>("Goals");

                    b.Property<int?>("Matches");

                    b.Property<int?>("PlayerId")
                        .IsRequired();

                    b.Property<int?>("RedCard");

                    b.Property<int?>("YellowCard");

                    b.HasKey("Id");

                    b.HasAlternateKey("Id", "PlayerId");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("PlrStats");
                });

            modelBuilder.Entity("InzBackCore.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InzBackCore.Domain.Matchh", b =>
                {
                    b.HasOne("InzBackCore.Domain.User", "user")
                        .WithMany("matches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InzBackCore.Domain.MatchhPlayer", b =>
                {
                    b.HasOne("InzBackCore.Domain.Matchh", "Matchh")
                        .WithMany("Players2Match")
                        .HasForeignKey("MatchhId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InzBackCore.Domain.Player", "Player")
                        .WithMany("Matchhs2Player")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InzBackCore.Domain.Player", b =>
                {
                    b.HasOne("InzBackCore.Domain.User", "user")
                        .WithMany("players")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("InzBackCore.Domain.PlayersStatictics", b =>
                {
                    b.HasOne("InzBackCore.Domain.Player", "player")
                        .WithOne("Statictics")
                        .HasForeignKey("InzBackCore.Domain.PlayersStatictics", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
